name: Build RPM
on:
  push:
  schedule:
    - cron: '0 6 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Install git
        run: sudo apt-get install jq curl
      - name: Set node_exporter version
        run: |
          export NODE_EXPORTER_VERSION=$(curl --silent 'https://api.github.com/repos/prometheus/node_exporter/releases/latest' | jq -r '.tag_name'| sed 's/^v//')
          echo "NODE_EXPORTER_VERSION=$NODE_EXPORTER_VERSION" >> $GITHUB_ENV
      - name: Set node_exporter url
        run: |
          export NODE_EXPORTER_URL=$(curl --silent 'https://api.github.com/repos/prometheus/node_exporter/releases/latest' | jq -r '.assets[] | select(.name | endswith("linux-amd64.tar.gz") ) | .browser_download_url')
          echo "NODE_EXPORTER_URL=$NODE_EXPORTER_URL" >> $GITHUB_ENV
      - name: rpmbuild
        uses: naveenrajm7/rpmbuild@master
        with:
          spec_file: SPECS/golang-github-prometheus-node_exporter.spec
      - name: Create release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{ env.NODE_EXPORTER_VERSION }}
          release_name: Release ${{ env.NODE_EXPORTER_VERSION }}
          body: |
            Bumped node_exporter version
          draft: false
          preprelease: false
      - name: Release RPM
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{ steps.create_release_outputs.upload_url }}
          asset_path: ${{ steps.rpm_build.outputs.source_rpm_path }}
          asset_name: ${{ steps.rpm_build.outputs.source_rpm_name }}
          asset_content_type: ${{ steps.rpm_build.outputs.rpm_content_type }}
